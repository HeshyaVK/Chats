// <auto-generated />
using System;
using ChartsApi.dbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChartsApi.Migrations
{
    [DbContext(typeof(DashboardContext))]
    [Migration("20240625180412_DashboardWidget")]
    partial class DashboardWidget
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChartsApi.Models.DashboardWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BorderColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatasetData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatasetLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Fill")
                        .HasColumnType("bit");

                    b.Property<string>("Labels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionCol")
                        .HasColumnType("int");

                    b.Property<int>("PositionRow")
                        .HasColumnType("int");

                    b.Property<int>("SizeCols")
                        .HasColumnType("int");

                    b.Property<int>("SizeRows")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DashboardWidgets");
                });
#pragma warning restore 612, 618
        }
    }
}
